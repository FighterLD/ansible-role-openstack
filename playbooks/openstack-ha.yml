---
# tasks file for openstack ha

- name: Install pacemake & corosync packages.
  yum:
    name: "{{ item }}"
    state: installed
  with_items:
    - pacemaker
    - corosync
    - pcs
  tags: ha

#- name: Copy the configuration files for corosync.
#  template: src=corosync.conf.j2 dest=/etc/corosync/corosync.conf
#  tags: ha

- name: Ensure pcsd service is started.
  service:
    name: "{{ item }}"
    state: started
  with_items:
    - pcsd
  tags: ha

- name: Configure Iptables
  shell: |
    iptables -I INPUT  -p udp --dport 5405 -j ACCEPT
    iptables -I INPUT -m state --state NEW  -p tcp  -m multiport --dports 2224,3121,21064 -j ACCEPT

- name: Setup hacluster user password and to authenticate as the hacluster user.
  shell: |
    echo "{{ openstack_hacluster_password }}" | passwd --stdin hacluster
  tags: ha

- name: Setup and Started pacemaker cluster.
  shell: |
    pcs cluster auth {{ hostvars[groups['controller'][0]]['ansible_hostname'] }} {{ hostvars[groups['controller'][1]]['ansible_hostname'] }} {{ hostvars[groups['controller'][2]]['ansible_hostname'] }} -u hacluster -p {{ openstack_hacluster_password }} --force
    pcs cluster setup --name openstack {{ hostvars[groups['controller'][0]]['ansible_hostname'] }} {{ hostvars[groups['controller'][1]]['ansible_hostname'] }} {{ hostvars[groups['controller'][2]]['ansible_hostname'] }} --force
    pcs cluster start --all
    pcs cluster enable --all
  run_once: True
  tags: ha

- name: Configure pacemaker cluster.
  shell: |
    pcs property set stonith-enabled=false
    pcs property set pe-warn-series-max=1000
    pcs property set pe-input-series-max=1000
    pcs property set pe-error-series-max=1000
    pcs property set cluster-recheck-interval=5min
  when: ansible_hostname == hostvars[groups['controller'][0]]['ansible_hostname']
  tags: ha

- name: Ensure corosync && pacemaker && pcsd service is enabled on boot.
  service:
    name: "{{ item }}"
    enabled: yes
  with_items:
    - corosync
    - pacemaker
    - pcsd
  tags: ha

# Pacemake cluster resource
- name: Configure pacemaker resource.
  shell: |
    pcs resource create VIP_Internal ocf:heartbeat:IPaddr2 ip={{ openstack_internal_vip }} cidr_netmask={{ openstack_internal_netmask }} op monitor interval=30s
    pcs resource create VIP_Public ocf:heartbeat:IPaddr2 ip={{ openstack_public_vip }} cidr_netmask={{ openstack_public_netmask }} op monitor interval=30s
    pcs resource create p_haproxy systemd:haproxy --clone
    pcs constraint colocation add VIP_Internal with p_haproxy-clone
    pcs constraint colocation add VIP_Public with p_haproxy-clone
    pcs constraint colocation add VIP_Public with VIP_Internal
    pcs constraint order start VIP_Internal then p_haproxy-clone kind=Optional
    sleep 15
  run_once: True
  tags: ha
